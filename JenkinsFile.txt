pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Ghoztancy/literate-adventure.git'
            }
        }
        stage('Junit Build') {
            steps {
                sh "mvn compile"
            }
        }
        stage('Junit Test') {
            steps {
                sh "mvn test"
            }
	}
        stage('Api testing') {
            steps {
                sh 'newman run Postman.Labb.postman_collection.json --environment Postman.Environment.postman_environment.json --reporters junit'
            }
            post {
                always {
                        junit '**/*xml'
                    }
                }
	}
	stage ("Extract test results") {
    cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'pom.xml', conditionalCoverageTargets: '70, 0, 0', enableNewApi: true, failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
}


        stage('Robot Framework System tests with Selenium') {
            steps {
                sh 'robot --variable BROWSER:headlesschrome -d Results  Tests'
            }
            post {
                always {
                    script {
                          step(
                                [
                                  $class              : 'RobotPublisher',
                                  outputPath          : 'Results',
                                  outputFileName      : '**/output.xml',
                                  reportFileName      : '**/report.html',
                                  logFileName         : '**/log.html',
                                  disableArchiveOutput: false,
                                  passThreshold       : 50,
                                  unstableThreshold   : 40,
                                  otherFiles          : "**/*.png,**/*.jpg",
                                ]
                            )
                    }
                }
            }
        }
    }
}